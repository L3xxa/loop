
# Generated by Qodo Gen

import unittest
from functions import count_digits

class TestCountDigits(unittest.TestCase):

    # Count digits in a positive integer
    def test_count_digits_positive_integer(self):
        self.assertEqual(count_digits(12345), 5)




# Generated by Qodo Gen

import unittest
from functions import sum_digits

class TestSumDigits(unittest.TestCase):

    # Calculate the sum of digits for a positive integer
    def test_sum_of_digits_positive_integer(self):
        result = sum_digits(12345)
        self.assertEqual(result, 15)



# Generated by Qodo Gen

import unittest
from functions import middle_arithmetic

class TestMiddleArithmetic(unittest.TestCase):

    # Calculate the average of digits for a positive integer
    def test_average_of_digits_positive_integer(self):
        result = middle_arithmetic(12345)
        self.assertEqual(result, 3.0)



# Generated by Qodo Gen


# Generated by Qodo Gen

import unittest
from functions import zeros

class TestZeros(unittest.TestCase):

    # Count zeros in a positive integer
    def test_count_zeros_in_positive_integer(self):
        self.assertEqual(zeros(102003), 3)